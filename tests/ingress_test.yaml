# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: ingress configuration
templates:
  - ingress.yml
tests:
  - it: should not create ingress when disabled
    set:
      ingress:
        enabled: false
    asserts:
      - hasDocuments:
          count: 0
          
  - it: should create basic ingress when enabled
    set:
      ingress:
        enabled: true
        hostname: horizon.example.com
        path: /
        pathType: Prefix
    template: ingress.yml
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: spec.rules[0].host
          value: horizon.example.com
      - equal:
          path: spec.rules[0].http.paths[0].path
          value: /
      - equal:
          path: spec.rules[0].http.paths[0].pathType
          value: Prefix
          
  - it: should configure TLS for ingress when enabled
    set:
      ingress:
        enabled: true
        hostname: horizon.example.com
        tls: true
    template: ingress.yml
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: spec.tls[0].hosts[0]
          value: horizon.example.com
      - equal:
          path: spec.tls[0].secretName
          value: horizon.example.com-tls

  - it: should apply common labels to ingress
    set:
      ingress:
        enabled: true
        hostname: horizon.example.com
      commonLabels:
        environment: test
        team: platform
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: metadata.labels.environment
          value: test
      - equal:
          path: metadata.labels.team
          value: platform

  - it: should apply ingress-specific labels
    set:
      ingress:
        enabled: true
        hostname: horizon.example.com
        labels:
          ingress-type: external
          tier: frontend
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: metadata.labels["ingress-type"]
          value: external
      - equal:
          path: metadata.labels.tier
          value: frontend

  - it: should apply common annotations to ingress
    set:
      ingress:
        enabled: true
        hostname: horizon.example.com
      commonAnnotations:
        kubernetes.io/ingress.class: "nginx"
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: metadata.annotations["kubernetes.io/ingress.class"]
          value: "nginx"

  - it: should apply ingress-specific annotations
    set:
      ingress:
        enabled: true
        hostname: horizon.example.com
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: metadata.annotations["cert-manager.io/cluster-issuer"]
          value: "letsencrypt"
      - equal:
          path: metadata.annotations["nginx.ingress.kubernetes.io/ssl-redirect"]
          value: "true"

  - it: should merge common and ingress-specific annotations
    set:
      ingress:
        enabled: true
        hostname: horizon.example.com
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
      commonAnnotations:
        kubernetes.io/ingress.class: "nginx"
        meta.helm.sh/release-name: "horizon"
    asserts:
      - isKind:
          of: Ingress
      - equal:
          path: metadata.annotations["cert-manager.io/cluster-issuer"]
          value: "letsencrypt"
      - equal:
          path: metadata.annotations["nginx.ingress.kubernetes.io/ssl-redirect"]
          value: "true" 
      - equal:
          path: metadata.annotations["kubernetes.io/ingress.class"]
          value: "nginx"
      - equal:
          path: metadata.annotations["meta.helm.sh/release-name"]
          value: "horizon"
