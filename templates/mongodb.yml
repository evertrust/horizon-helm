{{ if .Values.mongodb.enabled }}
apiVersion: "apps/v1"
kind: "StatefulSet"
metadata:
  name: {{ .Release.Name }}-mongo
  namespace: {{ .Release.Name }}-ns
spec:
  serviceName: {{ .Release.Name }}-mongo
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-mongo
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-mongo
    spec:
      containers:
        - name: {{ .Release.Name }}-mongo
          image: mongo
          imagePullPolicy: IfNotPresent
          env:
            - name: "MONGO_INITDB_ROOT_USERNAME"
              value: "test"

            - name: "MONGO_INITDB_ROOT_PASSWORD"
              value: "testpwd"

          ports:
            - containerPort: 27017
              name: mongodb

          volumeMounts:
            - name: {{ .Release.Name }}-mongo-ps
              mountPath: /var/lib/mongodb
      volumes:
        - name: {{ .Release.Name }}-mongo-ps
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-mongo-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-mongo-pvc
  namespace: {{ .Release.Name }}-ns
  labels:
    app: {{ .Release.Name }}-mongo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-mongo
  namespace: {{ .Release.Name }}-ns
  labels:
    app: {{ .Release.Name }}-mongo
spec:
  ports:
    - name: mongodb
      port: 27017
      targetPort: 27017
  selector:
    app: {{ .Release.Name }}-mongo
  {{ end }}