apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "horizon.deployment" . }}
  labels:
  {{- include "horizon.labels" . | nindent 4 }}
spec:
  {{ if .Values.horizontalAutoscaler.enabled }}
  replicas: {{ .Values.horizontalAutoscaler.minReplicas }}
  {{ end }}
  minReadySeconds: 15
  revisionHistoryLimit: 5
  selector:
    matchLabels:
  {{- include "horizon.baseLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
    {{- include "horizon.labels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ include "horizon.app" . }}
          image: {{ printf "%s:%s" .Values.image.registry (.Values.image.tag | default .Chart.AppVersion) }}
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            initialDelaySeconds: 60
            httpGet:
              path: /alive
              port: management
          readinessProbe:
            initialDelaySeconds: 90
            httpGet:
              path: /ready
              port: management
          env:
            {{- toYaml .Values.environment | nindent 12 }}
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          volumeMounts:
            - name: {{ .Release.Name }}-etc
              mountPath: /horizon/etc
            - name: {{ .Release.Name }}-license
              mountPath: /horizon/license
          ports:
            - name: http
              containerPort: 9000
            - name: management
              containerPort: 8558
            - name: artery
              containerPort: 25520
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      volumes:
        - name: {{ .Release.Name }}-etc
          configMap:
            name: {{ .Release.Name }}-config
        - name: {{ .Release.Name }}-license
          secret:
            secretName: {{ required "You must specify a license secret" .Values.license.secretName }}
            items:
              - key: {{ required "You must specify a license secret" .Values.license.secretKey }}
                path: horizon.lic
      affinity:
      {{- toYaml .Values.affinity | nindent 8 }}
      nodeSelector:
      {{- toYaml .Values.nodeSelector | nindent 8 }}
      tolerations:
  {{- toYaml .Values.tolerations | nindent 8 }}
