apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment
  labels:
    app: {{ .Release.Name }}-app
spec:
  {{ if .Values.hpa.enabled }}
  replicas: {{ .Values.hpa.minReplicas }}
  {{ end }}
  minReadySeconds: 15
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: {{ .Release.Name }}-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-app
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ .Release.Name }}-app
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - name: {{ .Release.Name }}-app
          image: {{ .Values.imageCredentials.registry}}/{{ .Values.image }}
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: 64Mi
              cpu: 100m
            limits:
              memory: 1Gi
              cpu: 500m
          livenessProbe:
            initialDelaySeconds: 60
            httpGet:
              path: /alive
              port: management
          readinessProbe:
            initialDelaySeconds: 90
            httpGet:
              path: /ready
              port: management
          env:
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: mongodb
            - name: APPLICATION_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: play
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            {{- range .Values.horizon.vaults }}
            - name: {{ .name | upper }}_VAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .name }}-vault-secret
                  key: password
            {{ end }}
          volumeMounts:
            - name: {{ .Release.Name }}-etc
              mountPath: /horizon/etc
          ports:
            - name: http
              containerPort: 9000
            - name: management
              containerPort: 8558
            - name: artery
              containerPort: 25520
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: {{ .Release.Name }}-regcred
      volumes:
        - name: {{ .Release.Name }}-etc
          configMap:
            name: {{ .Release.Name }}-config
